pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

local scene_frame
local frames_since_ball_spawn
local next_player_num_ball_spawn
local is_playing_game
local camera_y
local camera_vy
local ball_speed

local buttons
local button_presses
local button_releases

local players
local balls
local dropped_balls
local ball_spawners

local debug_mode=false
local ball_colors={9,11,8,10,12}

function _init()
	scene_frame=0
	frames_since_ball_spawn=0
	next_player_num_ball_spawn=rnd_int(1,2)
	is_playing_game=false
	camera_y=-128
	camera_vy=0
	ball_speed=0.5

	-- initialize inputs
	buttons={{},{}}
	button_presses={{},{}}
	button_releases={{},{}}

	-- reset the entities
	players={}
	balls={}
	dropped_balls={{},{}}
	ball_spawners={}

	-- make the entities
	create_player(1)
	create_player(2)
	create_ball_spawner(5,"left_hand",1,325-ternary(debug_mode,150,0))
	create_ball_spawner(58,"right_hand",1,100-ternary(debug_mode,150,0))
	create_ball_spawner(69,"left_hand",2,100-ternary(debug_mode,150,0))
	create_ball_spawner(122,"right_hand",2,325-ternary(debug_mode,150,0))

	if debug_mode then
		is_playing_game=true
		camera_y=0
	end
end

-- local skip_frame=0
function _update()
	-- skip_frame=(skip_frame+1)%10
	-- if skip_frame>0 then return end
	-- increment counters
	scene_frame=increment_counter(scene_frame)
	-- keep track of inputs (because btnp repeats presses)
	local any_button_press=false
	local p
	for p=1,2 do
		local b
		for b=0,4 do
			button_presses[p][b]=btn(b,p-1) and not buttons[p][b]
			button_releases[p][b]=not btn(b,p-1) and buttons[p][b]
			buttons[p][b]=btn(b,p-1)
			any_button_press=any_button_press or button_presses[p][b]
		end
	end
	-- title screen code
	if not is_playing_game and any_button_press then
		is_playing_game=true
		scene_frame=0
	end
	-- gameplay code
	if is_playing_game then
		-- camera_vy=mid(-4,camera_vy+0.1,4)
		camera_vy+=0.1
		camera_y+=camera_vy
		if camera_y>0 then
			camera_y=0
			camera_vy=-0.25*camera_vy
		end
		frames_since_ball_spawn=increment_counter(frames_since_ball_spawn)
		-- spawn a ball every so often
		-- if frames_since_ball_spawn>150 then
		-- 	frames_since_ball_spawn=0
		-- 	next_player_num_ball_spawn=3-next_player_num_ball_spawn
		-- end
		-- the balls speed up over time
		if scene_frame%30==0 then
			ball_speed=min(ball_speed+0.01,1.75)
		end
		-- update all the ball spawners
		local ball_spawner
		for ball_spawner in all(ball_spawners) do
			update_ball_spawner(ball_spawner)
		end
		-- update all the players
		local player
		for player in all(players) do
			update_player(player)
		end
		-- update all the balls
		local ball
		for ball in all(balls) do
			update_ball(ball)
		end
	end
end

function _draw()
	cls()
	camera(0,camera_y)
	-- draw the title
	sspr(18,8,108,71,10,-107)
	-- print("created (with   ) by bridgs",9,-32,5)
	-- spr(6,65,-34)
	-- print("https://brid.gs",33,-24,1)
	-- print("bridgs_dev",43,-16,1)
	-- spr(7,33,-18)
	if scene_frame%30<22 and not is_playing_game then
		print("press any button to start",13,-23,5)
	end
	-- draw a beautiful rainbow sky
	rectfill(0,0,128,26,1)
	rectfill(0,27,128,37,13)
	rectfill(0,38,128,65,12)
	rectfill(0,66,128,83,11)
	rectfill(0,66,128,83,11)
	rectfill(0,84,128,96,10)
	rectfill(0,97,128,106,9)
	rectfill(0,97,128,106,9)
	rectfill(0,107,128,113,8)
	rectfill(0,114,128,127,0)
	-- draw controls
	local n=mid(0,flr(scene_frame/3)-100,100)
	pal(13,1)
	sspr(0,62,9,10,20-n,47) -- s key
	sspr(9,62,9,10,31-n,47) -- f key
	sspr(0,82,27,10,17-n,67) -- l-shift key
	sspr(0,72,9,10,87+n,47) -- left arrow key
	sspr(9,72,9,10,98+n,47) -- right arrow key
	sspr(0,92,9,10,93+n,67) -- n key
	pal()
	print("move",23-n,58,0)
	print("move",90+n,58,0)
	print("toss",23-n,78,0)
	print("toss",90+n,78,0)
	-- draw the bounds of each player's side
	pset(0,113,0)
	pset(63,113,0)
	pset(64,113,0)
	pset(127,113,0)
	pset(0,0,0)
	-- pset(63,0,0)
	-- pset(64,0,0)
	pset(127,0,0)
	-- draw all the ball spawners
	local ball_spawner
	for ball_spawner in all(ball_spawners) do
		draw_ball_spawner(ball_spawner)
		pal()
	end
	-- draw all the balls
	local ball
	for ball in all(balls) do
		draw_ball(ball)
		pal()
	end
	-- draw all the players
	local player
	for player in all(players) do
		draw_player(player)
		pal()
	end
	-- draw score
	local i
	for i=1,5 do
		if dropped_balls[2][i] then
			pal(8,ball_colors[dropped_balls[2][i].color_index])
			spr(3,4+8*i,118)
			pal()
		else
			spr(1,4+8*i,118)
		end
	end
	for i=1,5 do
		if dropped_balls[1][i] then
			pal(8,ball_colors[dropped_balls[1][i].color_index])
			spr(3,69+8*i,118)
			pal()
		else
			spr(1,69+8*i,118)
		end
	end
	rectfill(0,114,127,117,0)
end


-- player methods
function create_player(player_num)
	local player={
		player_num=player_num,
		button_index=3-player_num,
		x=ternary(player_num==1,31,97),
		y=101,
		vx=0,
		pose="wiggle",
		pose_flipped=false,
		anim_frames=0,
		wiggle_frames=0,
		min_bound=ternary(player_num==1,9,73),
		max_bound=ternary(player_num==1,55,119),
		left_hand=nil,
		right_hand=nil,
		most_recent_catch_hand=ternary(player_num==1,"right_hand","left_hand")
	}
	-- add the player to the list of players
	add(players,player)
	return player
end

function update_player(self)
	self.vx=2*(ternary(buttons[self.button_index][1],1,0)-ternary(buttons[self.button_index][0],1,0))
	self.x=mid(self.min_bound,self.x+self.vx,self.max_bound)
	self.anim_frames=max(0,self.anim_frames-1)
	if self.anim_frames<=0 then
		self.pose="wiggle"
	end
	self.wiggle_frames+=1
	if self.wiggle_frames>ternary(self.vx==0,20,5) then
		self.wiggle_frames=0
		if self.pose=="wiggle" then
			self.pose_flipped=not self.pose_flipped
		end
	end
	-- catch balls
	local ball
	for ball in all(balls) do
		if not ball.held_by and ball.catchable_by_player_num==self.player_num and ball.y>100 then
			if not self.left_hand and ball.x==mid(self.x-9,ball.x,self.x) then
				self.left_hand=ball
				ball.held_by=self
				self.most_recent_catch_hand="left_hand"
				self.pose="catch"
				self.pose_flipped=true
				self.anim_frames=15
			elseif not self.right_hand and ball.x==mid(self.x,ball.x,self.x+9) then
				self.right_hand=ball
				ball.held_by=self
				self.most_recent_catch_hand="right_hand"
				self.pose="catch"
				self.pose_flipped=false
				self.anim_frames=15
			end
		end
	end
	-- update held balls x-positions
	if self.left_hand then
		self.left_hand.x=self.x-7
	end
	if self.right_hand then
		self.right_hand.x=self.x+6
	end
	-- throw balls
	if button_presses[self.button_index][4] then
		-- figure out which hand to throw with
		local throwing_hand
		if self.vx>0 and self.right_hand then
			throwing_hand="right_hand"
		elseif self.vx<0 and self.left_hand then
			throwing_hand="left_hand"
		elseif self.right_hand and self.most_recent_catch_hand!="right_hand" then
			throwing_hand="right_hand"
		elseif self.left_hand and self.most_recent_catch_hand!="left_hand" then
			throwing_hand="left_hand"
		elseif self.right_hand then
			throwing_hand="right_hand"
		elseif self.left_hand then
			throwing_hand="left_hand"
		else
			throwing_hand=nil
		end
		-- throw the ball
		if throwing_hand then
			local thrown_ball=self[throwing_hand]
			thrown_ball.y=105
			thrown_ball.ball_speed=ball_speed
			thrown_ball.vy=-5*thrown_ball.ball_speed
			thrown_ball.vx=ternary(self.player_num==1,1,-1)*thrown_ball.ball_speed
			self[throwing_hand]=nil
			thrown_ball.held_by=nil
			thrown_ball.catchable_by_player_num=3-self.player_num
			self.pose="throw"
			self.pose_flipped=(throwing_hand=="right_hand")
			self.anim_frames=15
		end
	end
	-- update held balls y-positions
	if self.left_hand then
		if self.pose=="catch" then
			self.left_hand.y=ternary(self.pose_flipped,108,102)
		else
			self.left_hand.y=ternary(self.pose_flipped,107,103)
		end
	end
	if self.right_hand then
		if self.pose=="catch" then
			self.right_hand.y=ternary(self.pose_flipped,102,108)
		else
			self.right_hand.y=ternary(self.pose_flipped,103,107)
		end
	end
end

function draw_player(self)
	-- rect(self.x-8.5,self.y+0.5,self.x+8.5,self.y+12.5,0)
	-- pset(self.x+0.5,self.y+0.5,1)
	pal(1,0)
	local sy
	if self.pose=="wiggle" then
		sy=6
	elseif self.pose=="throw" then
		sy=20
	elseif self.pose=="catch" then
		sy=34
	end
	sspr(0,sy,18,14,self.x-8.5,self.y-0.5,18,14,self.pose_flipped)
end


-- ball methods
function create_ball(x,y,color_index)
	local ball={
		x=x,
		y=y,
		vx=0,
		vy=0,
		color_index=color_index,
		ball_speed=ball_speed,
		held_by=nil,
		catchable_by_player_num=nil
	}
	-- add the ball to the list of balls
	add(balls,ball)
	return ball
end

function update_ball(self)
	if not self.held_by then
		self.vy+=0.15*self.ball_speed*self.ball_speed
		self.x+=self.vx
		self.y+=self.vy
	end
	if self.y>115 then
		del(balls,self)
		add(dropped_balls[3-self.catchable_by_player_num],self)
	end
end

function draw_ball(self)
	pal(8,ball_colors[self.color_index])
	spr(0,self.x-2.5,self.y-2.5)
end


-- ball spawner methods
function create_ball_spawner(x,hand,player_num,frames_to_spawn)
	local ball_spawner={
		x=x,
		y=120,
		hand=hand,
		player_num=player_num,
		color_index=rnd_int(1,#ball_colors),
		color_change_frames=0,
		frames_to_spawn=frames_to_spawn,
		anim="fall"
	}
	add(ball_spawners,ball_spawner)
	return ball_spawner
end

function update_ball_spawner(self)
	if self.anim=="fall" then
		self.frames_to_spawn-=1
		if self.frames_to_spawn<=0 then
			self.anim="rise"
		end
	end
	self.color_change_frames+=1
	if self.color_change_frames>2 then
		self.color_change_frames=0
		self.color_index=1+self.color_index%#ball_colors
	end
	-- see if the player grabs the ball
	local player=players[self.player_num]
	if abs(player.x-self.x)<8 and not player[self.hand] and self.anim!="fall" and self.y<=113 then
		local ball=create_ball(self.x,self.y,self.color_index)
		ball.held_by=player
		player[self.hand]=ball
		player.most_recent_catch_hand=self.hand
		self.anim="fall"
		self.frames_to_spawn=300
	end
	-- animate in an out of the ground
	if self.anim=="fall" then
		self.y=mid(113,self.y+0.05,120)
	end
	if self.anim=="rise" then
		self.y=mid(113,self.y-0.25,120)
	end
end

function draw_ball_spawner(self)
	pal(1,0)
	pal(8,ball_colors[self.color_index])
	palt(8,self.anim=="fall")
	spr(2,self.x-3.5,self.y-6.5)
	rectfill(self.x-1.5,114.5,self.x+2.5,117.5,0)
end


-- helper methods
-- if condition is true return the second argument, otherwise the third
function ternary(condition,if_true,if_false)
	return condition and if_true or if_false
end

-- increment a counter, wrapping to 20000 if it risks overflowing
function increment_counter(n)
	return n+ternary(n>32000,-12000,1)
end

function rnd_int(min_val,max_val)
	return flr(min_val+rnd(1+max_val-min_val))
end

__gfx__
00000000000000000008880088000880222222222222222200000000000000002222222222222222222222222222222222222222222222222222222200000123
00888000001110000088888088808880222222222222222205505500110011102222222222222222222222222222222222222222222222222222222200004567
088888000100010000888880088888002222222222222222555555500110111122222222222222222222222222222222222222222222222222222222000089ab
0888880001000100008888800088800022222222222222225555555001111110222222222222222222222222222222222222222222222222222222220000cdef
08888800010001000018881008888800222222222222222205555500101111102222222222222222222222222222222222222222222222222222222200000000
00888000001110000011111088808880222222222222222200555000011111102222222222222222222222222222222222222222222222222222222200000000
00000000000000000001110088000880222222222222222200050000001111002222222222222222222222222222222222222222222222222222222200000000
00000000000000000001110000000000222222222222222200000000000000002222222222222222222222222222222222222222222222222222222200000000
000000000000000000000000000000000000008888000000000000000000000000000000000000000000000000000000000000ccc00000000000000000000022
00000001111000000000000000000000000888888880000000000000000000000000000000000000000000000000000000000ccccc0000000000000000000022
00000001111000000000000000000000888888888880000000000000000000000000000000000000000000000000000000000ccccc0000000000000000000022
10011101111000000000000000000088888888888800000000000000000000000000000000000000000000000000000000000cccccc000000000000000000022
11111111111000000000000000088888888888880000aa0000000000000000000000000000000000000000000000000000000cccccc000000000000eee000022
0111011111100000000000000888888888888800000aaaa000000000000000000000000000000000000000000000000000000cccccc0000000000eeeeee00022
0000000111111000000000888888888888880000000aaaa0000000000000000000000000000000000000000000000000000000ccccc00000eeeeeeeeeee00022
0000011111111110010088888888888888800000000aaaaa000000000000000000000000000000000000000000000000000000cccccc00eeeeeeeeeeeee00022
000001111110111111088888888888888800000000aaaaaa000000000000000000000000000000000000000000000000000000cccccc00eeeeeeeeeee0000022
000001100110001110888888880888888800000000aaaaaa000000000000000000000000000000000000000000000000000000cccccc00eeeeeeeee000000022
000111100110000000888888880088888880000000aaaaaa000000000000000000000000000000000000000000000000000000cccccc00eeeeeee00000000022
00000000011110000088888880000888888000000aaaaaaa0000000000000000000000000000000000000000000000000000000ccccc000eeee0000000000022
00001100000000000008888000000088888800000aaaaaaa0000000000000000000000000000000000000000000000000000000ccccc000eeee0000000000022
00011000000000000000000000000088888800000aaaaaa0000000aa00000000000000000000000000000000000000000000000ccccc000eeee0000000000022
00011000000000000000000000000008888880000aaaaaa000000aaaa00000000000000000000000000000000000000000000000cccc0000eeee000ee0000022
00011101111000000000000000000008888880000aaaaa0000000aaaa00000099999999990000000000000000000000000000000cccc0000eeee0eeeee000022
00011101111000000000000000000000888888000aaaaa0000000aaaa0000099999999999990000000000bbbbb00000000000000cccc0000eeeeeeeeee000022
00001111111000000000000000000000888888000aaaa00000000aaaa00009999999999999990000000bbbbbbbb0000000000000cccc0000eeeeeeee00000022
00000111111000000000000000000000888888000aaaa00000000aaaa0009999900000099999900000bbbbbbbbb0000000000000cccc0000eeeeeee000000022
00010011111000000000000000000000088888800aaaa00000000aaaa0009999000000009999900000bbbbbbbbb000000000000ccccc00000eeee00000000022
00010001111110000000000000000000088888800aaaa0000000aaaaa009999900000000099990000bbbbbbbb00000bbbb00000ccccc00000eeee00000000022
00011111111111100100000000000000088888800aaaa0000000aaaaa009999000000000009900000bbbbbb000000bbbbbb0000ccccc00000eeee0000eeee022
00011111111011111100000000000000088888800aaaa0000000aaaa0009999000000000000000000bbbbb000000bbbbbbbb000ccccc000000eeeeeeeeeeee22
00000000011000111000000000000000008888800aaaaa00000aaaaa000999900000000000000000bbbbb0000000bbbbbbbb000ccccc000000eeeeeeeeeeee22
00000000011000000000000000000000008888800aaaaa00000aaaa0000999990000099999990000bbbbb000000bbbbbbbbbb00ccccc000000eeeeeeeeeeee22
00000000011110000000000000000000008888800aaaaa00000aaaa0000999990000999999999900bbbb000000bbbbbbbbbbb00ccccc0000000eeeeeeee00022
00000000000000000000000000000000008888800aaaaaa000aaaa00000099999000999999999900bbbb0000bbbbbbbbb0bbb00ccccc00000000000000000022
000000000000000000000000088800000088888000aaaaaaaaaaaa00000009999900009999999990bbbb0000bbbbbbbb00bbb00ccccc00000000000000000022
000000000000000000000000888880000088888000aaaaaaaaaaa000000009999990000009999990bbbb0000bbbbbbb000bbb00cccc00000cccc000000000022
0000000011110000000000008888880008888880000aaaaaaaaa0000000000999999000000099990bbbbb00000bbbb000bbbb00cccc000ccccccc00000000022
10011100111100000000000088888800088888000000aaaaaa000000000000099999990000999990bbbbb000000000000bbbb00cccc00cccccccc00000000022
11111110111100000000000088888880888888000000000000000000000000009999999999999900bbbbbb0000000000bbbbb00cccc0ccccccccc00000000022
0111011111110000000000000888888888888800bbbbb000000000000000000009999999999990000bbbbbb00000000bbbbb000ccccccccccccc000000000022
0001001111100000000000000888888888888000bbbbbbbb000000000000000000099999999900000bbbbbbbbbbbbbbbbbbb000ccccccccccc00000000000022
000100011111000000000000088888888888800bbbbbbbbbb000000000000000000009999990000000bbbbbbbbbbbbbbbbb00000ccccccc00000000000000022
000111111111100000000000008888888888000bbbbbbbbbbb0000000000000088800000000000000000bbbbbbbbbbbbbb000000cccccc000000000000000022
00011111111111100100000000888888888000bbbbbbbbbbbbb00000000000088888000000000008880000bbbbbbbbbb00000000cccc00000000000000000022
00000000011011111100000000088888880000bbbbbb0bbbbbbb0000000000088888800000000088888000000000000000000000000000000000000000000022
0000000001100011100000000000888800000bbbbbb0000bbbbb0000000000088888880000000088888000000000000000000000000000000000000000000022
0000000001111000000000000000000000000bbbbbb000000bbbb000000000088888880000000088888000000000aaaa00000009999999990000000000000022
0000000000000000000000000000000000000bbbbbb000000bbbb00000000008888888800000008888800000000aaaaaa0000999999999999000000000000022
000000000000000000000000000000000000bbbbbb00000000bbb00000000008888888880000008888880000000aaaaaa0009999999999999000000000000022
000000000000000000000000000000000000bbbbbb00000000bbb0000000000888880888000000888888000000aaaaaaa0099999999999999000000000000022
00000001111000000000000000000000000bbbbbb000000000bbb0000000cc0888880888800000888888000000aaaaaa00999999999999990000000000000022
00000001111000000000000000000000000bbbbb000000000bbbb00000cccc0888880088800000888888000000aaaaaa09999999000000000000000000000022
00000001111000000000000000000000000bbbbb00000000bbbbb0000ccccc0088880088880000888888000000aaaaa009999900000000000000000000000022
0000000111100000000000000000000000bbbbbb000000bbbbbbb00ccccccc0088888088880000088888000000aaaaa099999000000000000000000000000022
0000001111110000000000000000000000bbbbbbbbbbbbbbbbbb00cccccccc0088888008888000088888000000aaaa0099990000000000000000000000000022
000000111111100000000000000000000bbbbbbbbbbbbbbbbbb00cccc00ccc008888800888800008888800000aaaaa0099990000000000000000000000000022
000001111111100000000000000000000bbbbbb0bbbbbbbbbb00cccc0000cc008888800888880000888800000aaaaa0999990000000000000000000000000022
00001111111111000000000000000000bbbbbb000bbbbbbbb00cccc00000cc008888800088880000888800000aaaa00999900000000000000000000000000022
00011111111011100000000000000000bbbbb0000000000000cccc000000ccc0088880008888800088880000aaaaa00999900000000000000000000000000022
0111101101100111100000000000000bbbbbb000000000000cccc0000000ccc0088888000888800088880000aaaaa00999900000000000000000000000000022
111101110111101111000000000000bbbbbb000000000000ccccc0000000ccc0088888000888880088880000aaaa000999900000000000000999000000000022
0ddddddd00ddddddd0000000000000bbbbbb000000000000ccccccccc000ccc0008888000088888088880000aaaa000999900000000000009999900000000022
d7777777dd7777777d000000000000bbbbbb00000000000cccccccccccc0ccc000888800008888808888000aaaaa000999900000000000099999900000000022
d777dd77dd77ddd77d00000000000bbbbbb00000000000ccccccccccccc0ccc000888800000888888880000aaaaa000999990000000000999999900000000022
d77d7777dd77d7777d00000000000bbbbbb0000000000ccccccccccccc00cccc00888800000088888880000aaaa0000999990000000009999999000000000022
d77ddd77dd77dd777d00000000000bbbbb00000000000cccccc000000000cccc0088800000008888888000aaaaa0000999999900000099999990000000000022
d7777d77dd77d7777d00000000000bbbb00000000000cccccc0000000000cccc0008800000000888888000aaaaa0000099999999999999999900000000000022
d77dd777dd77d7777d00000000000bbb000000000000cccccc0000000000ccccc00000000000088888000aaaaa00000000999999999999900000000000000022
d7777777dd7777777d0000000000000000000000000ccccccc0000000000ccccc0000000000008888800aaaaaa00000000999999999000000000000000000022
dddddddddddddddddd0000000000000000000000000cccccc00000000000ccccc000000000000888880aaaaaaa00000000000000000000000000000000000022
1111111111111111110000000000000000000000000ccccc0000000000000cccc000000000000088800aaaaaa000000000000000000000000000000000000022
0ddddddd00ddddddd00000000000000000000000000cccc00000000000000ccccc0000000000000000aaaaaaa000000000000000000000000000000000000022
d7777777dd7777777d0000000000000000000000000000000000000000000ccccc0000000000000000aaaaaaa000000000000000000000000000000000000022
d777d777dd777d777d0000000000000000000000000000000000000000000ccccc000000000000000aaaaaaa0000000000000000000000000000000000000022
d77dd777dd777dd77d00000000000000000000000000000000000000000000cccc000000000000000aaaaaaa0000000000000000000000000000000000000022
d7ddd777dd777ddd7d00000000000000000000000000000000000000000000ccc0000000000000000aaaaaa00000000000000000000000000000000000000022
d77dd777dd777dd77d000000000000000000000000000000000000000000000cc0000000000000000aaaaa000000000000000000000000000000000000000022
d777d777dd777d777d0000000000000000000000000000000000000000000000000000000000000000aaa0000000000000000000000000000000000000000022
d7777777dd7777777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
dddddddddddddddddd22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
11111111111111111122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
0ddddddddddddddddddddddddd022222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7777777777777777777777777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d77d77777dd7d7d7d7dd7ddd77d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d77d77777d77d7d7d7d777d777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d77d77dd7dd7ddd7d7dd77d777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d77d777777d7d7d7d7d777d777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d77dd7777dd7d7d7d7d777d777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7777777777777777777777777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
ddddddddddddddddddddddddddd22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333322222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
0ddddddd022222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7777777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7d777d7d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7dd77d7d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7d7d7d7d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7d77dd7d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7d777d7d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
d7777777d22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
ddddddddd22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333322222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
